1- UPLOAD ZIP -->in Cartella to_upload e fa l'unzip ->response: json con tutti i file e per ogni file i campi e tipi rilevati
    Response:	{"data":[{"filename":"INFR_RT.dbf","schema":"public","table":"INFR_RT","column":"id","type":"int","column_name":"id","import":true},
			             {"INFR_EXT_L.shp":{"id":"int","nome":"str","geom":"geometry"}}],
	            }

2- LOAD(map_files,
        shapefile_folder,
        group_id,
        conn_str,
        schema,
        srid_validation,
        mapping_fields)  --> carica in tabella gli shapefile

   Response:	{"data":[{"filename":"INFR_RT.dbf","schema":"public","table":"INFR_RT","column":"id","type":"int","column_name":"id","import":true,isVariable:true},
   			             {"filename":"INFR_RT.dbf","schema":"public","table":"INFR_RT","column":"id","type":"int","column_name":"id","import":true,isVariable:true},
   			             ],
   	            }

3 - UPLOAD MODELLO PYTHON --> nella cartella modelli

    fase1:
    "test unitario"
    run_code(code_str, id_load_shape, params={}) -> results={"output": captured_output,    #sys.stdout
                                                                 "variables": results, #variabili interne che l'utente può cambiare dalla gui
                                                                "object": map_obj,    #funzioni interne al codice
                                                                "group_id":group_id,
                                                                "tables":tables,      #df pandas non geoPandas!
                                                                "layers":layers,      #df geoPandas (shp)
                                                                        }

    fase2:
    salvataggio sul db:
       	           results={"output": captured_output,    #sys.stdout
                                   "variables": results, #variabili interne che l'utente può cambiare dalla gui
                                   "object": map_obj,    #funzioni interne al codice
                                   "group_id":group_id,
                                   "tables":tables,      #df pandas non geoPandas!
                                   "layers":layers,      #df geoPandas (shp)
                                   "id":ID_MODEL
                            }


4- submit--> (id_model, id_load_shape, id_model_param) id_model_param={"variables":{}, tables:{}, layer:{}} --> results={"id_load_shape":131,"layers":{table:url_geoservice}}
   salvataggio sul db di results per consultazione